function RmLdr(funct, rm) {
	GameObject.call(this);
    this.canCollide = true;
	this.funct = funct;
	this.rm = rm;
	
	this.size = new Vector2(16, 16);
}


// Inherit from GameObject
RmLdr.prototype = Object.create(GameObject.prototype);
RmLdr.prototype.constructor = RmLdr;

RmLdr.prototype.collide = function(obj) {
	console.log("test");
	if (obj == player) {
		this.funct(this.rm);
	}
}







var first = true;

function entMain(pRoomNum) {
	if (!first) {
		
		for (var i = 0; i < objs.length; i++) {
			if (objs[i] != player) {
				document.body.removeChild(objs[i].elem);

				if (colBoxes) {
					document.body.removeChild(objs[i].box);
				}
			}
		}
	
	// Clear the list
	objs = [];
		
		objs.push(player);
		
		var cont = document.getElementById('map');
		
		// Delete the old map
		while (cont.firstChild) {
			cont.removeChild(cont.firstChild);
		}
		
	}
	drawMap(mainRm);
	
	
	var l = new RmLdr(entLeft, 0);
	l.position = new Vector2(29 * 16, 15 * 16 - 8);
	objs.push(l);
	
	var r = new RmLdr(entRight, 0);
	r.position = new Vector2(0 * 16, 15 * 16 - 8);
	objs.push(r);
	
	if (pRoomNum == 0) {
		player.position = new Vector2(15 * 16 - player.size.x / 2, 27 * 16);
	} else if (pRoomNum == 1) {
		player.position = new Vector2(2 * 16, 15 * 16 - 8);
	} else if (pRoomNum == 2) {
		player.position = new Vector2(28 * 16, 15 * 16 - 8);
	}
	
	var gob = new Goblin();
	gob.position = new Vector2(10 * 16, 15 * 16);
	objs.push(gob);

	var gob2 = new Goblin();
	gob2.position = new Vector2(20 * 16, 15 * 16);
	objs.push(gob2);
	
	first = false;
}

function entLeft() {
	for (var i = 0; i < objs.length; i++) {
		if (objs[i] != player) {
			document.body.removeChild(objs[i].elem);

			if (colBoxes) {
				document.body.removeChild(objs[i].box);
			}
		}
	}
	objs = [];
	objs.push(player);
	
	var cont = document.getElementById('map');
	
	// Delete the old map
	while (cont.firstChild) {
		cont.removeChild(cont.firstChild);
	}
	
	drawMap(leftRm);
	
	var l = new RmLdr(entMain, 2);
	l.position = new Vector2(0 * 16, 15 * 16 - 8);
	objs.push(l);
	
	player.position = new Vector2(2 * 16, 15 * 16 - player.size.y / 2);

	// Enemies

	var gob = new Goblin();
	gob.position = new Vector2(10 * 16, 15 * 16);
	objs.push(gob);

	var gob2 = new Goblin();
	gob2.position = new Vector2(20 * 16, 15 * 16);
	objs.push(gob2);
	
	
	gob2 = new Goblin();
	gob2.position = new Vector2(23 * 16, 7 * 16);
	objs.push(gob2);
	
	gob2 = new Goblin();
	gob2.position = new Vector2(7 * 16, 23 * 16);
	objs.push(gob2);
}

function entRight() {
	for (var i = 0; i < objs.length; i++) {
		if (objs[i] != player) {
			document.body.removeChild(objs[i].elem);

			if (colBoxes) {
				document.body.removeChild(objs[i].box);
			}
		}
	}
	objs = [];
	objs.push(player);
	
	var cont = document.getElementById('map');
	
	// Delete the old map
	while (cont.firstChild) {
		cont.removeChild(cont.firstChild);
	}
	
	
	drawMap(rightRm);
	
	var l = new RmLdr(entMain, 1);
	l.position = new Vector2(29 * 16, 14 * 16 - 8);
	objs.push(l);
	
	player.position = new Vector2(27 * 16, 14 * 16 - player.size.y / 2);

	// Enemies
	var gob = new Goblin();
	gob.position = new Vector2(16 * 22, 16 * 10);
	objs.push(gob);

	gob2 = new Goblin();
	gob2.position = new Vector2(16 * 11, 16 * 10);
	objs.push(gob2);
	
	gob2 = new Goblin();
	gob2.position = new Vector2(16 * 20, 16 * 19);
	objs.push(gob2);
	
	gob2 = new Goblin();
	gob2.position = new Vector2(16 * 15, 16 * 18);
	objs.push(gob2);
	
	gob2 = new Goblin();
	gob2.position = new Vector2(16 * 16, 16 * 10);
	objs.push(gob2);
	
	gob2 = new Goblin();
	gob2.position = new Vector2(16 * 11, 16 * 23);
	objs.push(gob2);
	
	gob2 = new Goblin();
	gob2.position = new Vector2(16 * 11, 16 * 15);
	objs.push(gob2);
	
	gob2 = new Goblin();
	gob2.position = new Vector2(16 * 11, 16 * 20);
	objs.push(gob2);
}

var mainRm=[
			[43,43,43,43,43,43,43,43,43,43,69,60,60,60,37,38,60,60,60,70,43,43,43,43,43,43,43,43,43,43],
			[43,43,43,43,43,43,43,43,43,43,65,48,27,27,39,40,27,27,50,66,43,43,43,43,43,43,43,43,43,43],
			[43,43,43,43,43,43,43,43,43,43,65,22,20,20,20,20,20,20,23,66,43,43,43,43,43,43,43,43,43,43],
			[43,43,43,43,43,43,43,43,43,43,65,22,20,20,20,20,20,20,23,66,43,43,43,43,43,43,43,43,43,43],
			[43,43,43,43,69,60,60,60,60,60,61,22,20,20,20,20,20,20,23,62,60,60,60,60,60,70,43,43,43,43],
			[43,43,43,43,65,48,27,27,27,27,27,52,20,20,20,20,20,20,54,27,27,27,27,27,50,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,29,29,29,29,29,29,29,29,29,29,29,29,20,20,20,23,66,43,43,43,43],
			[69,60,60,60,61,22,20,20,20,41,41,41,41,41,41,41,41,41,41,41,41,20,20,20,23,62,60,60,60,70],
			[65,48,27,27,27,52,20,20,20,41,41,41,41,41,41,41,41,41,41,41,41,20,20,20,54,27,27,27,50,66],
			[65,22,20,20,20,20,20,20,20,41,41,41,41,41,41,41,41,41,41,41,41,20,20,20,20,20,20,20,23,66],
			[72,74,20,20,20,20,20,20,20,41,41,41,41,41,41,41,41,41,41,41,41,20,20,20,20,20,20,20,78,76],
			[73,75,20,20,20,20,20,20,20,41,41,41,41,41,41,41,41,41,41,41,41,20,20,20,20,20,20,20,79,77],
			[65,22,20,20,20,20,20,20,20,41,41,41,41,41,41,41,41,41,41,41,41,20,20,20,20,20,20,20,23,66],
			[65,49,28,28,28,53,20,20,20,41,41,41,41,41,41,41,41,41,41,41,41,20,20,20,55,28,28,28,51,66],
			[71,67,67,67,64,22,20,20,20,41,41,41,41,41,41,41,41,41,41,41,41,20,20,20,23,63,67,67,67,68],
			[43,43,43,43,65,22,20,20,20,29,29,29,29,29,29,29,29,29,29,29,29,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,49,28,28,28,28,28,53,20,20,20,20,20,20,55,28,28,28,28,28,51,66,43,43,43,43],
			[43,43,43,43,71,67,67,67,67,67,64,22,20,20,20,20,20,20,23,63,67,67,67,67,67,68,43,43,43,43],
			[43,43,43,43,43,43,43,43,43,43,65,22,20,20,20,20,20,20,23,66,43,43,43,43,43,43,43,43,43,43],
			[43,43,43,43,43,43,43,43,43,43,65,22,20,20,20,20,20,20,23,66,43,43,43,43,43,43,43,43,43,43],
			[43,43,43,43,43,43,43,43,43,43,65,49,28,28,80,81,28,28,51,66,43,43,43,43,43,43,43,43,43,43],
			[43,43,43,43,43,43,43,43,43,43,71,67,67,67,82,83,67,67,67,68,43,43,43,43,43,43,43,43,43,43]

			];
			
			
			
var leftRm=[
			[69,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,70],
			[65,48,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,50,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,29,29,29,20,20,29,29,29,29,29,29,29,20,20,29,29,29,29,29,29,29,20,20,29,29,29,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[72,74,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[73,75,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,29,29,29,20,20,29,29,29,29,29,29,29,20,20,29,29,29,29,29,29,29,29,29,29,29,29,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,22,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,29,20,20,20,20,20,20,20,20,23,66],
			[65,49,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,51,66],
			[71,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,68]
			
			];
			
			
var rightRm = [
			[43,43,43,43,43,43,43,43,43,43,43,29,29,29,29,29,29,29,29,43,43,43,43,43,43,43,43,43,43,43],
			[43,43,43,43,43,43,43,43,43,43,43,29,20,20,20,20,20,20,29,43,43,43,43,43,43,43,43,43,43,43],
			[43,43,43,43,43,43,43,43,43,43,43,29,20,20,20,20,20,20,29,43,43,43,43,43,43,43,43,43,43,43],
			[43,43,43,43,43,43,43,43,43,43,43,29,20,20,20,20,20,20,29,43,43,43,43,43,43,43,43,43,43,43],
			[43,43,43,43,69,60,60,60,60,60,60,29,20,20,20,20,20,20,29,60,60,60,60,60,60,70,43,43,43,43],
			[43,43,43,43,65,48,27,27,27,27,27,29,29,29,20,20,29,29,29,27,27,27,27,27,50,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,62,60,60,60,70],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,54,27,27,27,50,66],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,78,76],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,79,77],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,55,28,28,28,51,66],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,63,67,67,67,68],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,22,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,23,66,43,43,43,43],
			[43,43,43,43,65,49,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,51,66,43,43,43,43],
			[43,43,43,43,71,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,68,43,43,43,43],
			[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43],
			[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43],
			[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43],
			[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43]
			
			];